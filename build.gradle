plugins {
	id 'maven-publish'
	id 'fabric-loom' version '1.2-SNAPSHOT'
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
	maven {
		name = "MidnightLib"
		url = "https://api.modrinth.com/maven"
	}
	maven {
		url 'https://dl.cloudsmith.io/public/azuredoom-mods/azurelib/maven/'
	}
	maven {
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = 'Ladysnake Libs'
		url = "https://maven.ladysnake.org/releases"
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft
	mappings "net.fabricmc:yarn:1.20.1+build.10:v2"
	modImplementation libs.fabric.loader
	modImplementation libs.fabric.api
	modImplementation libs.midnight.lib
	include libs.midnight.lib
	modImplementation libs.azure.lib
}

processResources {
	inputs.property "version", version

	filesMatching('fabric.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
